{"version":3,"file":"MediaMessage-legacy-CKyZG4uE.js","sources":["packages/chat-widget-components/src/components/MediaMessage/AttachmentIcon.tsx","packages/chat-widget-components/src/components/MediaMessage/MediaMessage.tsx"],"sourcesContent":["const AttachmentIcon = () => {\n  return (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16' fill='none'>\n      <path\n        d='M11 3.99984V11.6665C11 13.1398 9.80669 14.3332 8.33335 14.3332C6.86002 14.3332 5.66669 13.1398 5.66669 11.6665V3.33317C5.66669 2.41317 6.41335 1.6665 7.33335 1.6665C8.25335 1.6665 9.00002 2.41317 9.00002 3.33317V10.3332C9.00002 10.6998 8.70002 10.9998 8.33335 10.9998C7.96669 10.9998 7.66669 10.6998 7.66669 10.3332V3.99984H6.66669V10.3332C6.66669 11.2532 7.41335 11.9998 8.33335 11.9998C9.25335 11.9998 10 11.2532 10 10.3332V3.33317C10 1.85984 8.80669 0.666504 7.33335 0.666504C5.86002 0.666504 4.66669 1.85984 4.66669 3.33317V11.6665C4.66669 13.6932 6.30669 15.3332 8.33335 15.3332C10.36 15.3332 12 13.6932 12 11.6665V3.99984H11Z'\n        fill='#ffffff'\n      />\n      <mask\n        id='mask0_3460_15772'\n        style={{ maskType: 'luminance' }}\n        maskUnits='userSpaceOnUse'\n        x='4'\n        y='0'\n        width='8'\n        height='16'\n      >\n        <path\n          d='M11 3.99984V11.6665C11 13.1398 9.80669 14.3332 8.33335 14.3332C6.86002 14.3332 5.66669 13.1398 5.66669 11.6665V3.33317C5.66669 2.41317 6.41335 1.6665 7.33335 1.6665C8.25335 1.6665 9.00002 2.41317 9.00002 3.33317V10.3332C9.00002 10.6998 8.70002 10.9998 8.33335 10.9998C7.96669 10.9998 7.66669 10.6998 7.66669 10.3332V3.99984H6.66669V10.3332C6.66669 11.2532 7.41335 11.9998 8.33335 11.9998C9.25335 11.9998 10 11.2532 10 10.3332V3.33317C10 1.85984 8.80669 0.666504 7.33335 0.666504C5.86002 0.666504 4.66669 1.85984 4.66669 3.33317V11.6665C4.66669 13.6932 6.30669 15.3332 8.33335 15.3332C10.36 15.3332 12 13.6932 12 11.6665V3.99984H11Z'\n          fill='white'\n        />\n      </mask>\n      <g mask='url(#mask0_3460_15772)'></g>\n    </svg>\n  )\n}\n\nexport default AttachmentIcon\n","import { SyntheticEvent, useEffect, useRef, useState } from 'react'\n\nimport { MAX_RETRIES, Media, MEDIA_ERR_NETWORK } from '@td-org/chat-widget-shared'\n\nimport AttachmentIcon from './AttachmentIcon.tsx'\nimport { MediaMessageProps } from './types.ts'\n\nimport classes from './MediaMessage.module.scss'\n\nconst convertVideoUrl = (url: string): string => {\n  if (url.startsWith('blob:')) {\n    return url\n  } else {\n    return `${url}#t=0.001`\n  }\n}\n\nconst MediaMessage = (props: MediaMessageProps) => {\n  const { type, url, getContentTemporaryUrl, onError, onMediaLoadedData, children } = props\n\n  const mediaRef = useRef<HTMLVideoElement & HTMLAudioElement>(null)\n  const imageRef = useRef<HTMLImageElement>(null)\n  const currentTime = useRef<number>(0)\n  const [mediaSourceUrl, setMediaSourceUrl] = useState(url)\n  const retryTimes = useRef<number>(0)\n\n  useEffect(() => {\n    if (type === 'video' && url && url.startsWith('blob:')) {\n      mediaRef.current?.load()\n    }\n  }, [type, url])\n\n  const switchSource = (newSource: string) => {\n    if (mediaRef.current) {\n      setMediaSourceUrl(newSource)\n      mediaRef.current.load()\n      mediaRef.current.play()\n    }\n  }\n\n  const seek = (time: number) => {\n    if (mediaRef.current) {\n      mediaRef.current.currentTime = time\n    }\n  }\n  const onSourceError = async (e: SyntheticEvent<HTMLMediaElement>) => {\n    if (onError) {\n      onError(new Error(`failed to load media. Url: ${e.currentTarget.currentSrc}`))\n    }\n    const errorCode = e.currentTarget.error?.code\n    if (getContentTemporaryUrl && errorCode === MEDIA_ERR_NETWORK) {\n      if (retryTimes.current >= MAX_RETRIES) return\n      retryTimes.current = retryTimes.current + 1\n      try {\n        const newMediaUrl = await getContentTemporaryUrl()\n        if (newMediaUrl) {\n          switchSource(newMediaUrl)\n          seek(currentTime.current)\n        }\n      } catch {\n        const error = new Error('failed to fetch new media url.')\n        if (onError) {\n          onError(error)\n        }\n      }\n    }\n  }\n\n  const onImgError = async (e: SyntheticEvent<HTMLImageElement>) => {\n    if (onError) {\n      onError(new Error(`failed to load image. Url: ${e.currentTarget.currentSrc}`))\n    }\n    if (getContentTemporaryUrl) {\n      if (retryTimes.current >= MAX_RETRIES) return\n      retryTimes.current = retryTimes.current + 1\n      try {\n        const newMediaUrl = await getContentTemporaryUrl()\n        if (newMediaUrl && imageRef.current) {\n          setMediaSourceUrl(newMediaUrl)\n        }\n      } catch {\n        const error = new Error('failed to fetch new image url.')\n        if (onError) {\n          onError(error)\n        }\n      }\n    }\n  }\n\n  const onTimeUpdate = () => {\n    if (mediaRef.current && mediaRef.current.currentTime) {\n      currentTime.current = mediaRef.current.currentTime\n    }\n  }\n\n  const onFileClick = async () => {\n    const latestUrl = getContentTemporaryUrl ? await getContentTemporaryUrl() : url\n    if (!latestUrl) return\n\n    window.open(latestUrl, '_blank')\n  }\n\n  const onMediaLoaded = () => {\n    onMediaLoadedData?.()\n  }\n\n  switch (type) {\n    case Media.Audio:\n      return (\n        <audio\n          data-testid='customAudio'\n          ref={mediaRef}\n          className={classes.customAudio}\n          controls\n          onError={onSourceError}\n          onTimeUpdate={onTimeUpdate}\n          onLoadedData={onMediaLoaded}\n        >\n          <source src={mediaSourceUrl} type='audio/mpeg' />\n          <source src={mediaSourceUrl} type='audio/ogg' />\n          <track src='' kind='captions' srcLang='en' label='english_captions' />\n          Your browser does not support the audio tag.\n        </audio>\n      )\n    case Media.Video:\n      return (\n        <video\n          data-testid='customVideo'\n          ref={mediaRef}\n          className={classes.customVideo}\n          controls\n          playsInline\n          onError={onSourceError}\n          onTimeUpdate={onTimeUpdate}\n          onLoadedData={onMediaLoaded}\n        >\n          <source src={convertVideoUrl(mediaSourceUrl)} type='video/mp4' />\n          <track src='' kind='captions' srcLang='en' label='english_captions' />\n          Your browser does not support the video tag.\n        </video>\n      )\n    case Media.Image:\n      return (\n        <img\n          src={mediaSourceUrl}\n          ref={imageRef}\n          alt='This is an img attachment'\n          onError={onImgError}\n          className={classes.customImage}\n          onLoad={onMediaLoaded}\n        />\n      )\n    case Media.File:\n      return (\n        <button data-testid='customFile' aria-label='file' className={classes.customFile} onClick={onFileClick}>\n          <AttachmentIcon />\n          <span>{children}</span>\n        </button>\n      )\n    default:\n      return <></>\n  }\n}\n\nexport default MediaMessage\n"],"names":["AttachmentIcon","jsxs","xmlns","width","height","viewBox","fill","children","jsx","d","id","style","maskType","maskUnits","x","y","mask","convertVideoUrl","url","startsWith","concat","exports","props","type","getContentTemporaryUrl","onError","onMediaLoadedData","mediaRef","useRef","imageRef","currentTime","_reactExports$useStat2","_slicedToArray","useState","mediaSourceUrl","setMediaSourceUrl","retryTimes","useEffect","_mediaRef$current","current","load","onSourceError","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_e$currentTarget$erro","errorCode","newMediaUrl","error","wrap","_callee$","_context","prev","next","Error","currentTarget","currentSrc","code","MEDIA_ERR_NETWORK","MAX_RETRIES","abrupt","sent","newSource","play","time","t0","stop","_x","apply","arguments","onImgError","_ref2","_callee2","_context2","_x2","onTimeUpdate","onFileClick","_callee3","latestUrl","_callee3$","_context3","window","open","onMediaLoaded","Media","Audio","ref","className","classes","controls","onLoadedData","src","kind","srcLang","label","Video","playsInline","Image","alt","onLoad","File","onClick","Fragment"],"mappings":"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"}