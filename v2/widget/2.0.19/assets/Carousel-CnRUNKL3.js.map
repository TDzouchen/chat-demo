{"version":3,"file":"Carousel-CnRUNKL3.js","sources":["packages/shared/src/utils/scrollBy.ts","packages/chat-widget-components/src/components/Carousel/types.ts","packages/chat-widget-components/src/components/Carousel/CarouselArrow.tsx","packages/chat-widget-components/src/components/Carousel/CarouselItem.tsx","packages/chat-widget-components/src/components/Carousel/Carousel.tsx"],"sourcesContent":["const easeInOut = (t: number) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t)\n\nexport const smoothScrollBy = (element: HTMLDivElement, targetLeft: number, duration = 400) => {\n  const start = element.scrollLeft\n  const startTime = performance.now()\n\n  const step = (timestamp: number) => {\n    const elapsed = timestamp - startTime\n    const progress = Math.min(elapsed / duration, 1)\n\n    const easedProgress = easeInOut(progress)\n\n    element.scrollLeft = Math.round(start + targetLeft * easedProgress)\n\n    if (progress < 1) {\n      requestAnimationFrame(step)\n    }\n  }\n\n  requestAnimationFrame(step)\n}\n","import { type CarouselCard, type MessageButton } from '@td-org/chat-widget-shared'\n\nexport type CarouselProps = {\n  enableRTL?: boolean\n  items: Array<CarouselCard>\n  onButtonClick: (info: MessageButton) => void\n  onError?: (e: Error) => void\n}\n\nexport type CarouselItemProps = {\n  onButtonClick: (info: MessageButton) => void\n  onError?: (e: Error) => void\n} & CarouselCard\n\nexport enum Direction {\n  Left = 'left',\n  Right = 'right'\n}\n","import clsx from 'clsx'\n\nimport { Direction } from './types.ts'\n\nimport classes from './Carousel.module.scss'\n\ntype PropTypes = {\n  onClick: () => void\n  direction: Direction\n  hidden?: boolean\n}\n\nconst RightArrow = (): JSX.Element => {\n  return (\n    <svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20' fill='none'>\n      <path\n        d='M7.15837 13.825L8.33337 15L13.3334 10L8.33337 5L7.15837 6.175L10.975 10L7.15837 13.825Z'\n        fill='#1F1F1F'\n      />\n      <mask\n        id='mask0_3639_28005'\n        style={{ maskType: 'luminance' }}\n        maskUnits='userSpaceOnUse'\n        x='7'\n        y='5'\n        width='7'\n        height='10'\n      >\n        <path\n          d='M7.15837 13.825L8.33337 15L13.3334 10L8.33337 5L7.15837 6.175L10.975 10L7.15837 13.825Z'\n          fill='white'\n        />\n      </mask>\n      <g mask='url(#mask0_3639_28005)'></g>\n    </svg>\n  )\n}\n\nconst LeftArrow = (): JSX.Element => {\n  return (\n    <svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20' fill='none'>\n      <path\n        d='M12.8417 6.175L11.6667 5L6.66669 10L11.6667 15L12.8417 13.825L9.02502 10L12.8417 6.175Z'\n        fill='#1F1F1F'\n      />\n      <mask\n        id='mask0_3639_27965'\n        style={{ maskType: 'luminance' }}\n        maskUnits='userSpaceOnUse'\n        x='6'\n        y='5'\n        width='7'\n        height='10'\n      >\n        <path\n          d='M12.8417 6.175L11.6667 5L6.66669 10L11.6667 15L12.8417 13.825L9.02502 10L12.8417 6.175Z'\n          fill='white'\n        />\n      </mask>\n      <g mask='url(#mask0_3639_27965)'></g>\n    </svg>\n  )\n}\n\nconst CarouselArrow = ({ onClick, direction, hidden }: PropTypes): JSX.Element => {\n  return (\n    <button\n      className={clsx([classes.arrow, classes[direction], { [classes.hidden]: hidden }])}\n      onClick={onClick}\n      aria-hidden={hidden}\n      aria-label={`scroll-${direction}`}\n    >\n      {direction === Direction.Left ? <LeftArrow /> : <RightArrow />}\n    </button>\n  )\n}\n\nexport default CarouselArrow\n","import { type SyntheticEvent, useState } from 'react'\n\nimport Buttons from '../Buttons/index.ts'\n\nimport { CarouselItemProps } from './types.ts'\n\nimport classes from './Carousel.module.scss'\n\nconst CarouselItem = (props: CarouselItemProps): JSX.Element => {\n  const { imageUrl, title, description, buttons, onButtonClick: onClick, onError } = props\n  const [error, setError] = useState(false)\n\n  const onImgError = async (e: SyntheticEvent<HTMLImageElement>) => {\n    if (onError) {\n      onError(new Error(`failed to load image. Url: ${e.currentTarget.currentSrc}`))\n    }\n    setError(true)\n  }\n\n  return (\n    <div className={classes.carousel}>\n      {imageUrl &&\n        (error ? (\n          <div className={classes.image} />\n        ) : (\n          <img className={classes.image} src={imageUrl} alt='carousel img' aria-hidden onError={onImgError} />\n        ))}\n      <div className={classes.content}>\n        <div className={classes.text}>\n          <p className={classes.title} title={title}>\n            {title}\n          </p>\n          {description && (\n            <p className={classes.description} title={description}>\n              {description}\n            </p>\n          )}\n        </div>\n        {buttons.length > 0 && <Buttons buttons={buttons} onClick={onClick} />}\n      </div>\n    </div>\n  )\n}\n\nexport default CarouselItem\n","import { useEffect, useRef, useState } from 'react'\nimport clsx from 'clsx'\n\nimport { smoothScrollBy } from '@td-org/chat-widget-shared'\n\nimport CarouselArrow from './CarouselArrow.tsx'\nimport CarouselItem from './CarouselItem.tsx'\nimport { CarouselProps, Direction } from './types.ts'\n\nimport classes from './Carousel.module.scss'\n\nconst carouselGap = 24\nconst Carousel = (props: CarouselProps): JSX.Element => {\n  const { enableRTL, items, onButtonClick, onError } = props\n  const hasItems = items.length > 1\n\n  const carouselRef = useRef<HTMLDivElement>(null)\n\n  const [hasLeftArrow, setLeftArrow] = useState(false)\n  const [hasRightArrow, setRightArrow] = useState(hasItems)\n\n  useEffect(() => {\n    const ref = carouselRef.current\n\n    setLeftArrow(enableRTL ? hasItems : false)\n    setRightArrow(!enableRTL ? hasItems : false)\n\n    const setArrowsVisibility = (event: Event) => {\n      const target = event.currentTarget as HTMLElement\n      if (!target) return\n      const { offsetWidth, scrollWidth, scrollLeft } = target\n\n      if (enableRTL) {\n        setLeftArrow(scrollLeft > offsetWidth - scrollWidth)\n        setRightArrow(scrollLeft !== 0)\n      } else {\n        setLeftArrow(scrollLeft !== 0)\n        setRightArrow(scrollLeft < scrollWidth - offsetWidth)\n      }\n    }\n\n    if (ref && ref.addEventListener) {\n      ref.addEventListener('scroll', setArrowsVisibility, false)\n    }\n\n    return () => {\n      if (ref && ref.removeEventListener) {\n        ref.removeEventListener('scroll', setArrowsVisibility, false)\n      }\n    }\n  }, [enableRTL, hasItems])\n\n  const scrollCarouselBy = (direction: Direction) => {\n    if (carouselRef.current) {\n      const distance = carouselRef.current.offsetWidth + carouselGap\n      const left = direction === Direction.Left ? -distance : distance\n\n      smoothScrollBy(carouselRef.current, left)\n    }\n  }\n\n  return (\n    <div\n      ref={carouselRef}\n      className={clsx({\n        [classes.container]: true,\n        [classes.rtl]: enableRTL\n      })}\n    >\n      {items.map((item, index) => (\n        <CarouselItem key={index} {...item} onButtonClick={onButtonClick} onError={onError} />\n      ))}\n      <CarouselArrow\n        hidden={!hasLeftArrow}\n        direction={Direction.Left}\n        onClick={() => scrollCarouselBy(Direction.Left)}\n      />\n      <CarouselArrow\n        hidden={!hasRightArrow}\n        direction={Direction.Right}\n        onClick={() => scrollCarouselBy(Direction.Right)}\n      />\n    </div>\n  )\n}\nexport default Carousel\n"],"names":["easeInOut","t","smoothScrollBy","element","targetLeft","duration","start","startTime","step","timestamp","elapsed","progress","easedProgress","Direction","RightArrow","jsxs","jsx","LeftArrow","CarouselArrow","onClick","direction","hidden","clsx","classes","CarouselItem","props","imageUrl","title","description","buttons","onError","error","setError","useState","onImgError","e","Buttons","carouselGap","Carousel","enableRTL","items","onButtonClick","hasItems","carouselRef","useRef","hasLeftArrow","setLeftArrow","hasRightArrow","setRightArrow","useEffect","ref","setArrowsVisibility","event","target","offsetWidth","scrollWidth","scrollLeft","scrollCarouselBy","distance","left","item","index"],"mappings":"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"}